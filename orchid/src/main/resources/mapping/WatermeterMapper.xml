<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ih2ome.hardware_service.service.dao.WatermeterMapper">
    <!-- 数据库表名 -->
    <sql id="smart_watermeter">narcissus_test.smart_watermeter</sql>
    <sql id="smart_gateway_bind">narcissus_test.smart_gateway_bind</sql>
    <sql id="smart_gateway">narcissus_test.smart_gateway</sql>
    <sql id="smart_watermeter_record">narcissus_test.smart_watermeter_record</sql>
    <sql id="smart_exception">narcissus_test.smart_mistake</sql>
    <sql id="house">caspain_test.house</sql>
    <sql id="room">caspain_test.room</sql>
    <sql id="apartment">volga_test.apartment</sql>
    <sql id="floor">volga_test.floor</sql>
    <sql id="jzroom">volga_test.room</sql>

    <!--配置resultMap -->
    <!--分散式水表列表VO-->
    <resultMap type="com.ih2ome.hardware_service.service.vo.HMWatermeterListVO" id="hmWatermeterListResultMap" autoMapping="true">
        <id column="room_id" property="roomId" />

        <collection property="watermeterDetailVOS" javaType="List"
                    ofType="com.ih2ome.hardware_service.service.vo.WatermeterDetailVO" autoMapping="true">
            <id column="smart_watermeter_id" property="smartWatermeterId" />
        </collection>
    </resultMap>

    <!--集中式水表列表VO-->
    <resultMap type="com.ih2ome.hardware_service.service.vo.JZWatermeterDetailVO" id="jzWatermeterListResultMap" autoMapping="true">
        <id column="room_id" property="roomId" />

        <collection property="watermeterDetailVOS" javaType="List"
                    ofType="com.ih2ome.hardware_service.service.vo.WatermeterDetailVO" autoMapping="true">
            <id column="smart_watermeter_id" property="smartWatermeterId" />
        </collection>
    </resultMap>

<!--增 -->

    <!--添加水表-->
    <insert id="addSmartWatermeter" parameterType="com.ih2ome.hardware_service.service.model.narcissus.SmartWatermeter" useGeneratedKeys="true" keyProperty="smart_watermeter_id">
        insert into <include refid="smart_watermeter" />(created_at,created_by,updated_at,updated_by,deleted_at,deleted_by,apartment_id,floor_id,house_id,room_id,house_catalog,meter_type,
        uuid,onoff_status,price,meter_amount,last_amount,meter_updated_at,manufactory)
        values(#{createdAt},#{createdBy},#{updatedAt},#{updatedBy},#{deletedAt},#{deletedBy},#{apartmentId},#{floorId},#{houseId},#{roomId},#{houseCatalog},#{meterType},
        #{uuid},#{onoffStatus},#{price},#{meterAmount},#{lastAmount},#{meterUpdatedAt},#{manufactory})
    </insert>

    <!--添加水表-->
    <insert id="addSmartGatewayBind" parameterType="com.ih2ome.hardware_service.service.model.narcissus.SmartGatewayBind" >
        insert into <include refid="smart_gateway_bind" />(smart_device_type,smart_gateway_id,smart_id)
        values(#{smartGatewayId},#{smartDeviceType},#{smartId})
    </insert>



<!-- 改 -->

    <!--改水费单价-->
    <update id="updataWaterPrice" parameterType="int" >
        UPDATE <include refid="smart_watermeter" /> SET price = #{price} WHERE smart_watermeter_id = #{watermeterId};
    </update>

    <!--更新水表抄表读数-->
    <update id="updataWaterLastAmount"  >
        UPDATE <include refid="smart_watermeter" /> SET last_amount=#{amount},meter_updated_at= FROM_UNIXTIME(#{time}/1000) WHERE uuid = #{uuid};
    </update>

    <!-- 更新水表在线状态byUUid-->
    <update id="updataWatermerterOnoffStatusByUuid" >
        UPDATE <include refid="smart_watermeter" /> SET onoff_status = #{code} WHERE uuid = #{uuid};
    </update>
<!-- 查 -->

    <!-- 分散式水表 -->
    <select id="findWatermetersByUserId" parameterType="int" resultMap="hmWatermeterListResultMap" >
        SELECT r.id AS room_id,gb.smart_gateway_id,w.smart_watermeter_id,r.name AS room_name,h.area+h.building_num+h.floor_num+h.house_num AS house_name,w.meter_type,w.created_at,w.last_amount,w.meter_amount,w.price,w.onoff_status,g.sn
        FROM
        <include refid="smart_watermeter" /> AS w
        INNER JOIN
        <include refid="smart_gateway_bind" /> AS gb
        ON w.smart_watermeter_id = gb.smart_id
        INNER JOIN
        <include refid="smart_gateway" /> AS g
        ON g.smart_gateway_id = gb.smart_gateway_id
        INNER JOIN
        <include refid="house" /> AS h
        ON w.house_id= h.id
        INNER JOIN
        <include refid="room" /> AS r
        ON  w.room_id= r.id AND h.id=r.house_id AND r.created_by_id = #{id} ;
    </select>

    <!-- 查询网关by网关id -->
    <select id="findGatewaybySmartGatewayId" parameterType="int" resultType="com.ih2ome.hardware_service.service.vo.WatermeterGatewayDetailVO">
        SELECT g.smart_gateway_id,g.room_id,g.updated_at,g.created_at,g.brand FROM <include refid="smart_gateway" />  g WHERE smart_gateway_id =  #{id};
    </select>

    <!--查询水表by网关id-->
    <select id="findWatermeterByGatewayId" parameterType="int" resultType="com.ih2ome.hardware_service.service.vo.HMWatermeterListVO">
        SELECT gb.smart_gateway_id,w.smart_watermeter_id,r.name AS room_name,h.area+h.building_num+h.floor_num+h.house_num AS house_name,w.meter_type,w.created_at,w.last_amount,w.meter_amount,w.price,w.onoff_status
        FROM
        <include refid="smart_watermeter" /> AS w
        INNER JOIN
        <include refid="smart_gateway_bind" /> AS gb
        ON w.smart_watermeter_id = gb.smart_id AND gb.smart_gateway_id = #{id}
        INNER JOIN
        <include refid="house" /> AS h
        ON w.house_id= h.id
        INNER JOIN
        <include refid="room" /> AS r
        ON  w.room_id= r.id AND h.id=r.house_id;
    </select>

    <!--查询集中式水表列表by楼层id-->
    <select id="findWatermetersByFloorId" parameterType="int" resultMap="hmWatermeterListResultMap" >
        SELECT r.id AS room_id,gb.smart_gateway_id,w.smart_watermeter_id,r.name AS room_name,w.meter_type,w.created_at,w.last_amount,w.meter_amount,w.price,w.onoff_status,g.sn
        FROM
        <include refid="smart_watermeter" /> AS w
        INNER JOIN
        <include refid="smart_gateway_bind" /> AS gb
        ON w.smart_watermeter_id = gb.smart_id
        INNER JOIN
        <include refid="smart_gateway" /> AS g
        ON g.smart_gateway_id = gb.smart_gateway_id
        INNER JOIN
        <include refid="floor" /> AS f
        ON w.floor_id= f.id
        INNER JOIN
        <include refid="jzroom" /> AS r
        ON  w.room_id= r.id AND f.id=r.floor_id AND f.id = #{id} ;
    </select>

    <!--查询集中式公寓下的网关by公寓id-->
    <select id="findGatewayByApartmentId" parameterType="int" resultType="com.ih2ome.hardware_service.service.vo.JZWatermeterGatewayVO" >
        SELECT g.smart_gateway_id,g.onoff_status,COUNT(DISTINCT gb.smart_id) AS watermeter_num,sum(case w.onoff_status when 1 then 1 else 0 end) AS watermeter_onoff_num
        FROM <include refid="smart_watermeter"/> AS w
        INNER JOIN <include refid="smart_gateway_bind"/> AS gb
        ON w.smart_watermeter_id = gb.smart_id
        INNER JOIN <include refid="smart_gateway"/>  AS g
        ON g.smart_gateway_id = gb.smart_gateway_id
        WHERE g.apartment_id = #{id};
    </select>

    <!--查询水表抄表记录by水表id-->
    <select id="findWatermeterRecordByWatermeterId" parameterType="int" resultType="com.ih2ome.hardware_service.service.model.narcissus.SmartWatermeterRecord">
        SELECT wr.created_at,wr.device_amount,wr.smart_watermeter_id FROM <include refid="smart_watermeter_record"/> wr WHERE smart_watermeter_id = #{id} ORDER BY created_at DESC
    </select>

    <!--查询筛选水表抄表记录by起止时间-->
    <select id="findWatermeterRecordByWatermeterIdAndTime"  resultType="com.ih2ome.hardware_service.service.model.narcissus.SmartWatermeterRecord">
       SELECT wr.created_at,wr.device_amount,wr.smart_watermeter_id FROM <include refid="smart_watermeter_record"/> wr WHERE smart_watermeter_id = #{id} AND created_at between #{startTime} and #{endTime} ORDER BY created_at DESC
    </select>

    <!--水表异常记录by水表id-->
    <select id="findWatermeterExceptionByWaterId" parameterType="int" resultType="com.ih2ome.hardware_service.service.vo.ExceptionVO">
        SELECT e.created_at,e.exception_type FROM <include refid="smart_exception"/> e,<include refid="smart_watermeter"/> w WHERE e.uuid = w.uuid AND w.smart_watermeter_id = #{id}
    </select>

    <!--网关异常记录by网关id-->
    <select id="findWatermeterGatewayExceptionByGatewayId" parameterType="int" resultType="com.ih2ome.hardware_service.service.vo.ExceptionVO">
        SELECT e.created_at,e.exception_type FROM <include refid="smart_exception"/> e,<include refid="smart_gateway"/> g WHERE e.uuid = g.uuid AND g.smart_gateway_id = #{id}
    </select>

    <!--查询水表抄表参数by水表id-->
    <select id="findWatermeterRecordParamsByWatermeterId" parameterType="int" resultType="com.ih2ome.hardware_service.service.vo.WatermeterRecordParamsVo">
        SELECT watermeter.uuid,watermeter.manufactory FROM <include refid="smart_watermeter"/> watermeter WHERE watermeter.smart_watermeter_id = #{id}
    </select>

    <!--查询floorIdByroomId-->
    <select id="selectHouseCreatedByByHouseId" parameterType="int" resultType="java.lang.Integer">
        SELECT house.created_by
        FROM <include refid="house"/> house WHERE house.id = #{id}
    </select>

    <!--查询floorIdByroomId-->
    <select id="selectApartmentCreatedByByApartmentId" parameterType="int" resultType="java.lang.Integer">
        SELECT apartment.created_by
        FROM <include refid="apartment"/> apartment WHERE apartment.id = #{id}
    </select>

    <!-- 查询水表byuuid -->
    <select id="findWatermetersByUuId" parameterType="int" resultType="com.ih2ome.hardware_service.service.model.narcissus.SmartWatermeter">
        SELECT smart_watermeter_id,created_at,created_by,updated_at,deleted_at,deleted_by,apartment_id,floor_id,house_id,room_id,house_catalog,meter_type,uuid,onoff_status,price,meter_amount,last_amount,meter_updated_at,manufactory
        FROM <include refid="smart_watermeter"/> smart_watermeter WHERE smart_watermeter.uuid = #{uuid}
    </select>

    <!-- 查询水表读数by水表id -->
    <select id="findWatermeterAmountByWatermeterId" parameterType="int" resultType="java.lang.Integer">
        SELECT (last_amount-meter_amount) AS amount
        FROM <include refid="smart_watermeter"/> smart_watermeter WHERE smart_watermeter.smart_watermeter_id = #{watermenterId}
    </select>

    <!-- 查询水表所有的uuidAndManufactory -->
    <select id="selectWatermeterUuidAndManufactory" resultType="com.ih2ome.hardware_service.service.vo.UuidAndManufactoryVO">
        SELECT uuid,manufactory FROM <include refid="smart_watermeter"/>
    </select>

    <!-- 查询最近一次抄表时间 -->
    <select id="selectWatermeterMeterUpdatedAt" parameterType="String" resultType="java.sql.Timestamp">
        SELECT meter_updated_at FROM <include refid="smart_watermeter"/>  WHERE uuid = #{uuid}
    </select>

    <!--查询集中式web水表list-->
    <select id="findJzWatermeterWebListVoList" parameterType="com.ih2ome.hardware_service.service.vo.WatermeterWebListVo" resultType="com.ih2ome.hardware_service.service.vo.WatermeterWebListVo">
        SELECT
        vsd.id ammeterId,
        va.`name` apartmentName,
        CONCAT(
        cau.first_name,
        cau.last_name
        ) landlordName,
        cau.username authUserName,
        va.address houseAddress,
        vr.`name` roomNo,
        vrc.customer_name customerName,
        vrc.customer_phone customerPhone,
        vsd.`name` deviceName,
        vsd.`online` communicationStatus,
        vsd.style isHub,
        '1' `type`
        FROM
        `volga_test`.smart_device vsd left join
        `volga_test`.room vr on vsd.room_id=vr.id LEFT JOIN
        `volga_test`.apartment va on vr.apartment_id=va.id LEFT JOIN
        `volga_test`.room_contract vrc on vrc.room_id=vr.id
        LEFT JOIN `volga_test`.area varea on va.area=varea.id
        LEFT JOIN caspain_test.auth_user cau on vrc.created_by = cau.id
        WHERE
        1 = 1
        AND (vsd.is_delete != '1' or vsd.is_delete is null)
        AND (va.is_delete != '1' or va.is_delete is null)
        AND (vr.is_delete != '1' or vr.is_delete is null)
        AND (vrc.is_delete != '1' or vrc.is_delete is  null)
        AND (
        (
        vsd.style = '0'
        AND vrc.`status` = 'active'
        )
        OR vsd.style = '1'
        )
        <if test="ammeterId != '' and ammeterId != null">
            AND vsd.id = '${ammeterId}'
        </if>
        <if test="apartmentName != '' and apartmentName != null">
            AND va.`name` LIKE '%${apartmentName}%'
        </if>
        <if test="landlordName != '' and landlordName != null">
            AND CONCAT(cau.first_name,cau.last_name) LIKE '%${apartmentName}%'
        </if>
        <if test="customerName != '' and customerName != null">
            AND vrc.customer_name LIKE '%${customerName}%'
        </if>
        <if test="deviceName != '' and deviceName != null">
            AND vsd.`name` LIKE '%${deviceName}%'
        </if>
        <if test="authUserName != '' and authUserName != null">
            AND cau.username LIKE '%${authUserName}%'
        </if>
        <if test="customerPhone != '' and customerPhone != null">
            AND vrc.customer_phone LIKE '%${customerPhone}%'
        </if>
        <if test="cityName != '' and cityName != null">
            AND va.city LIKE '%${cityName}%'
        </if>
        <if test="districtName != '' and districtName != null">
            AND va.district LIKE '%${districtName}%'
        </if>
        <if test="areaName != '' and areaName != null">
            AND va.area LIKE '%${areaName}%'
        </if>
        <if test="communicationStatus != '' and communicationStatus != null">
            AND vsd.`online` LIKE '%${communicationStatus}%'
        </if>
    </select>
</mapper>